name: reverse-proxy

services:
  traefik:
    restart: unless-stopped
    depends_on:
      authelia:
        condition: service_healthy
    container_name: traefik
    # The official v2 Traefik docker image
    image: traefik:latest
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - "--api.insecure=true"
      # Redirects web traffic to HTTPS
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entryPoint.permanent=true"
      # Enables TLS and manages certificates
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.websecure.http.tls.certresolver=cloudflare"
      - "--entrypoints.websecure.http.tls.domains[0].main=${PUBLIC_HOSTNAME}"
      - "--entrypoints.websecure.http.tls.domains[0].sans=*.${PUBLIC_HOSTNAME}"
      - "--certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.cloudflare.acme.dnschallenge.resolvers=1.1.1.1"
      - "--certificatesResolvers.cloudflare.acme.storage=/cert/acme.json"
      # Allow telemetry
      - "--global.sendAnonymousUsage=true"
      # File provider
      - "--providers.file.directory=/config"
      - "--providers.file.watch=true"
      # Docker provider
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.defaultRule=HostRegexp(`{subdomain:{{ .ContainerName }}}.{host:.+}`)"
    environment:
      - TZ=${TIMEZONE}
      - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
    ports:
      # The HTTP port
      - "80:80"
      # The HTTPS port
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CONFIG_PATH}/Auth/Traefik/config:/config
      - ${CONFIG_PATH}/Auth/Traefik/cert:/cert
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      - "traefik.http.routers.traefik.middlewares=authelia"

  authelia:
    restart: unless-stopped
    depends_on:
      lldap:
        condition: service_healthy
    container_name: authelia
    image: authelia/authelia:latest
    ports:
      - "9091:9091"
    volumes:
      - ${CONFIG_PATH}/Auth/Authelia:/config
    environment:
      - TZ=${TIMEZONE}
      - AUTHELIA_AUTHENTICATION_BACKEND_PASSWORD_RESET_DISABLE=false
      - AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ADDRESS=ldap://lldap
      - AUTHELIA_AUTHENTICATION_BACKEND_LDAP_PASSWORD=${LDAP_PASSWORD}
      - AUTHELIA_AUTHENTICATION_BACKEND_LDAP_IMPLEMENTATION=custom
      - AUTHELIA_AUTHENTICATION_BACKEND_LDAP_START_TLS=false
      - AUTHELIA_AUTHENTICATION_BACKEND_LDAP_BASE_DN=${LDAP_BASE_DN}
      - AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ADDITIONAL_USERS_DN="ou=people"
      - AUTHELIA_AUTHENTICATION_BACKEND_LDAP_USERS_FILTER="(&(|({username_attribute}={input})({mail_attribute}={input}))(objectClass=person))"
      - AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ADDITIONAL_GROUPS_DN="ou=groups"
      - AUTHELIA_AUTHENTICATION_BACKEND_LDAP_GROUPS_FILTER="(member={dn})"
      - AUTHELIA_AUTHENTICATION_BACKEND_LDAP_USERNAME_ATTRIBUTES_DISPLAY_NAME=displayName
      - AUTHELIA_AUTHENTICATION_BACKEND_LDAP_USERNAME_ATTRIBUTES_USERNAME=uid
      - AUTHELIA_AUTHENTICATION_BACKEND_LDAP_USERNAME_ATTRIBUTES_GROUP_NAME=cn
      - AUTHELIA_AUTHENTICATION_BACKEND_LDAP_USERNAME_ATTRIBUTES_MAIL=mail
      - AUTHELIA_AUTHENTICATION_BACKEND_LDAP_USER=uid=bind_user,ou=people,dc=example,dc=com
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.authelia.rule=HostRegexp(`{subdomain:auth}.{host:.+}`)"
      - "traefik.http.middlewares.authelia.forwardAuth.address=http://authelia:9091/api/verify?rd=https%3A%2F%2Fauth.${PUBLIC_HOSTNAME}%2F"
      - "traefik.http.middlewares.authelia.forwardAuth.trustForwardHeader=true"
      - "traefik.http.middlewares.authelia.forwardAuth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email"

  lldap:
    restart: unless-stopped
    container_name: lldap
    image: lldap/lldap:stable
    ports:
      # For LDAPS (LDAP Over SSL), enable port if LLDAP_LDAPS_OPTIONS__ENABLED set true, look env below
      # - "6360:6360"
      # For the web front-end
      - "17170:17170"
    volumes:
      - "${CONFIG_PATH}/Auth/LLDAP:/data"
    environment:
      - TZ=${TIMEZONE}
      - LLDAP_LDAP_BASE_DN=${LDAP_BASE_DN}
      - LLDAP_LDAP_PORT=389
      - LLDAP_LDAP_USER_PASS=${LDAP_PASSWORD}
      - LLDAP_JWT_SECRET=REPLACE_WITH_RANDOM
      - LLDAP_KEY_SEED=REPLACE_WITH_RANDOM
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lldap.rule=HostRegexp(`{subdomain:lldap}.{host:.+}`)"
      - "traefik.http.routers.lldap.entrypoints=websecure"

  postfix:
    image: boky/postfix
    container_name: postfix
    restart: unless-stopped
    environment:
      - TZ=${TIMEZONE}
      - RELAYHOST=smtp.gmail.com:587
      - RELAYHOST_USERNAME=${SMTP_USERNAME}
      - RELAYHOST_PASSWORD=${SMTP_PASSWORD}
    volumes:
      - ${CONFIG_PATH}/Auth/Postfix:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.postfix.rule=HostRegexp(`{subdomain:postfix}.{host:.+}`)"
      - "traefik.http.routers.postfix.entrypoints=websecure"
