name: reverse-proxy

services:
  crowdsec:
    image: crowdsecurity/crowdsec:v1.6.2
    container_name: crowdsec
    restart: unless-stopped

    environment:
      COLLECTIONS: "crowdsecurity/traefik crowdsecurity/http-cve"
    volumes:
      - ${LOGS_PATH}:/var/log:ro
      - ${CONFIG_PATH}/Auth/Crowdsec/db:/var/lib/crowdsec/data/
      - ${CONFIG_PATH}/Auth/Crowdsec/config:/etc/crowdsec/

  traefik:
    restart: unless-stopped
    depends_on:
      authelia:
        condition: service_healthy
      crowdsec:
        condition: service_started
    container_name: traefik
    # The official v2 Traefik docker image
    image: traefik:v3.1
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
      start_interval: 1s
    command:
      # Enable Dashboard
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--ping=true"
      # Enable Traefik logs
      - "--accesslog"
      - "--accesslog.filepath=/var/log/traefik/access.log"
      # Redirects web traffic to HTTPS
      - "--entrypoints.web.address=:80"
      - "--entryPoints.web.proxyProtocol.trustedIPs=100.0.0.0/8"
      - "--entryPoints.web.forwardedHeaders.trustedIPs=100.0.0.0/8"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      # Enables TLS and manages certificates
      - "--entrypoints.websecure.address=:443"
      - "--entryPoints.websecure.proxyProtocol.trustedIPs=100.0.0.0/8"
      - "--entryPoints.websecure.forwardedHeaders.trustedIPs=100.0.0.0/8"
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.websecure.http.tls.certresolver=cloudflare"
      - "--entrypoints.websecure.http.tls.domains[0].main=${PUBLIC_HOSTNAME}"
      - "--entrypoints.websecure.http.tls.domains[0].sans=*.${PUBLIC_HOSTNAME}"
      - "--certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.cloudflare.acme.dnschallenge.resolvers=1.1.1.1"
      - "--certificatesResolvers.cloudflare.acme.storage=/cert/acme.json"
      # Allow telemetry
      - "--global.sendAnonymousUsage=true"
      # File provider
      - "--providers.file.directory=/config"
      - "--providers.file.watch=true"
      # Docker provider
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - '--providers.docker.defaultRule=Host(`{{ or (index .Labels "subdomain") (lower .ContainerName)}}.${PUBLIC_HOSTNAME}`)'
      # Plugins
      ## SABLIER: Dynamically start/stop containers
      - --experimental.plugins.sablier.modulename=github.com/acouvreur/sablier
      - --experimental.plugins.sablier.version=v1.8.0-beta.12
      ## CrowdSec:
      - --experimental.plugins.crowdsec.modulename=github.com/maxlerebourg/crowdsec-bouncer-traefik-plugin
      - --experimental.plugins.crowdsec.version=v1.3.3
    environment:
      - TZ=${TIMEZONE}
      - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
    ports:
      # The HTTP port
      - target: 80
        published: 80
        mode: host
      # The HTTPS port
      - target: 443
        published: 443
        mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${LOGS_PATH}/traefik:/var/log/traefik
      - ${CONFIG_PATH}/Auth/Traefik/config:/config
      - ${CONFIG_PATH}/Auth/Traefik/cert:/cert
    labels:
      # CrowdSec middleware
      - "traefik.http.middlewares.crowdsec.plugin.crowdsec.enabled=true"
      - "traefik.http.middlewares.crowdsec.plugin.crowdsec.crowdseclapikey=${CROWDSEC_API_KEY}"
      # Headers middleware
      - "traefik.http.middlewares.default-headers.headers.customResponseHeaders.stsSeconds=63072000"
      - "traefik.http.middlewares.default-headers.headers.customResponseHeaders.stsPreload=true"
      - "traefik.http.middlewares.default-headers.headers.customResponseHeaders.contentTypeNosniff=true"

      - "traefik.enable=true"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      - "traefik.http.routers.traefik.middlewares=authelia,crowdsec,default-headers"

  whoami:
    restart: unless-stopped
    container_name: whoami
    image: traefik/whoami:latest
    ports:
      - "1337:80"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.middlewares=authelia,crowdsec,default-headers"

  authelia:
    restart: unless-stopped
    depends_on:
      lldap:
        condition: service_healthy
      postfix:
        condition: service_healthy
    container_name: authelia
    image: authelia/authelia:4.38
    ports:
      - "9091:9091"
    volumes:
      - ${CONFIG_PATH}/Auth/Authelia:/config
    environment:
      - X_AUTHELIA_CONFIG_FILTERS=expand-env
      - AUTHELIA_NOTIFIER_SMTP_SENDER=auth.${SMTP_USERNAME}
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "subdomain=auth"
      - "traefik.http.middlewares.authelia.forwardAuth.address=http://authelia:9091/api/verify?rd=https%3A%2F%2Fauth.${PUBLIC_HOSTNAME}%2F"
      - "traefik.http.middlewares.authelia.forwardAuth.trustForwardHeader=true"
      - "traefik.http.middlewares.authelia.forwardAuth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email"

  lldap:
    restart: unless-stopped
    container_name: lldap
    image: lldap/lldap:2024-06-16
    healthcheck:
      start_interval: 3s
    ports:
      # For LDAPS (LDAP Over SSL), enable port if LLDAP_LDAPS_OPTIONS__ENABLED set true, look env below
      # - "6360:6360"
      # For the web front-end
      - "17170:17170"
    volumes:
      - "${CONFIG_PATH}/Auth/LLDAP:/data"
    environment:
      - TZ=${TIMEZONE}
      - LLDAP_LDAP_BASE_DN=${LDAP_BASE_DN}
      - LLDAP_LDAP_PORT=389
      - LLDAP_LDAP_USER_PASS=${LDAP_PASSWORD}
      - LLDAP_JWT_SECRET=${LDAP_JWT_SECRET}
      - LLDAP_KEY_SEED=${LDAP_KEY_SEED}
    labels:
      - "traefik.enable=true"
      - "subdomain=lldap"
      - "traefik.http.routers.lldap.middlewares=authelia,crowdsec,default-headers"
      - "traefik.http.routers.lldap.entrypoints=websecure"

  postfix:
    image: boky/postfix:4.2.1
    container_name: postfix
    restart: unless-stopped
    healthcheck:
      start_interval: 3s
      start_period: 30s
    environment:
      - TZ=${TIMEZONE}
      - RELAYHOST=smtp.gmail.com:587
      - RELAYHOST_USERNAME=${SMTP_USERNAME}
      - RELAYHOST_PASSWORD=${SMTP_PASSWORD}
      - ALLOW_EMPTY_SENDER_DOMAINS=true
    volumes:
      - ${CONFIG_PATH}/Auth/Postfix:/data
