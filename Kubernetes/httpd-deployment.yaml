apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: ./kompose -f ./compose.yaml convert
    kompose.version: 1.34.0 (cbf2835db)
    traefik.enable: "true"
    traefik.http.routers.httpd.middlewares: crowdsec,default-headers
    traefik.http.routers.httpd.rule: Host(`nerine.dev`)
    traefik.http.services.httpd.loadbalancer.server.port: "80"
  labels:
    io.kompose.service: httpd
  name: httpd
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: httpd
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: ./kompose -f ./compose.yaml convert
        kompose.version: 1.34.0 (cbf2835db)
        traefik.enable: "true"
        traefik.http.routers.httpd.middlewares: crowdsec,default-headers
        traefik.http.routers.httpd.rule: Host(`nerine.dev`)
        traefik.http.services.httpd.loadbalancer.server.port: "80"
      labels:
        io.kompose.service: httpd
    spec:
      containers:
        - env:
            - name: TZ
              value: Europe/Warsaw
          image: nginx:latest
          name: httpd
          ports:
            - containerPort: 80
              protocol: TCP
          volumeMounts:
            - mountPath: /usr/share/nginx/html
              name: httpd-cm0
      restartPolicy: Always
      volumes:
        - configMap:
            name: httpd-cm0
          name: httpd-cm0
