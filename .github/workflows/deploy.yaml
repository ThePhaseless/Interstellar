name: Auto Deploy

on:
  push:
    branches:
      - main

concurrency:
  group: deployment-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    # Set outputs that will be available to other jobs.
    outputs:
      terraform: ${{ steps.decide.outputs.run_terraform }}
      ansible: ${{ steps.decide.outputs.run_ansible }}
      k3s: ${{ steps.decide.outputs.run_k3s }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Detect changes in specific folders
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            k3s:
              - '.github/workflows/ansible-k3s.yaml'
              - 'Ansible/k3s.yaml'

            ansible:
              - 'Ansible/setup-*.yaml'
              - 'Ansible/tasks/**'
              - 'Ansible/vars/**'
              - '.github/workflows/ansible-setup.yaml'

            terraform:
              - 'Terraform/**'
              - '.github/workflows/terraform.yaml'

      - name: Decide which job to run
        id: decide
        run: |
          # Get filter outputs as JSON and extract workflow names
          FILTER_OUTPUTS='${{ toJSON(steps.filter.outputs) }}'

          # Define workflows in priority order (highest to lowest priority)
          # These should match the filter names defined above
          WORKFLOWS=($(
            echo "$FILTER_OUTPUTS" | jq -r 'keys[]' | grep -v '\w*_count' | grep -v 'changes'
          ))

          # Initialize all outputs to false
          for workflow in "${WORKFLOWS[@]}"; do
            echo "run_${workflow}=false" >> $GITHUB_OUTPUT
          done

          # Find the highest priority workflow that has changes
          SELECTED_WORKFLOW=""
          for workflow in "${WORKFLOWS[@]}"; do
            # Extract the value for this workflow from the JSON output
            workflow_value=$(echo "$FILTER_OUTPUTS" | jq -r ".${workflow}")
            if [[ "$workflow_value" == "true" ]]; then
              echo "run_${workflow}=true" >> $GITHUB_OUTPUT
              SELECTED_WORKFLOW=$workflow
              echo "Running ${workflow} workflow"
              break
            fi
          done

          if [[ -z "$SELECTED_WORKFLOW" ]]; then
            echo "No changes detected in tracked paths"
          fi

  terraform:
    needs: changes
    if: needs.changes.outputs.terraform == 'true'
    secrets: inherit
    uses: ./.github/workflows/terraform.yaml

  ansible_setup:
    needs: changes
    if: needs.changes.outputs.ansible == 'true'
    secrets: inherit
    uses: ./.github/workflows/ansible-setup.yaml

  # ansible_k3s:
  #   needs: changes
  #   if: needs.changes.outputs.k3s == 'true'
  #   secrets: inherit
  #   uses: ./.github/workflows/ansible-k3s.yaml
