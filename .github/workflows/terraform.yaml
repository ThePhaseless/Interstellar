name: Terraform

on:
  workflow_dispatch:
  workflow_call:

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: server
    env:
      UV_LINK_MODE: copy

      # For Terraform
      PM_PASS: ${{ secrets.PM_PASS }}
      TF_VAR_fingerprint: ${{ secrets.TF_VAR_FINGERPRINT }}
      TF_VAR_private_key_path: ${{ github.workspace }}/.private/oci_private_key.pem
      TF_VAR_region: ${{ secrets.TF_VAR_REGION }}
      TF_VAR_tenancy_ocid: ${{ secrets.TF_VAR_TENANCY_OCID }}
      TF_VAR_user_ocid: ${{ secrets.TF_VAR_USER_OCID }}
      TF_VAR_proxmox_host: ${{ secrets.TF_VAR_PROXMOX_HOST }}
      TF_VAR_state_bucket_name: ${{ vars.TF_BUCKET_NAME }}
      TF_VAR_ansible_bucket_name: ${{ vars.ANSIBLE_BUCKET_NAME }}

      # For OCI Backend
      OCI_user: ${{ secrets.TF_VAR_USER_OCID }}
      OCI_tenancy: ${{ secrets.TF_VAR_TENANCY_OCID }}
      OCI_fingerprint: ${{ secrets.TF_VAR_FINGERPRINT }}
      OCI_region: ${{ secrets.TF_VAR_REGION }}
      OCI_private_key_path: ${{ github.workspace }}/.private/oci_private_key.pem

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          activate-environment: true
          enable-cache: true
          cache-local-path: .venv

      - name: Install Project Dependencies
        run: uv sync --locked --link-mode=copy

      - name: Cache Terraform Providers
        uses: actions/cache@v4
        with:
          path: Terraform/.terraform
          key: ${{ runner.os }}-terraform-${{ hashFiles('Terraform/.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Create OCI Private Key
        run: mkdir -p $(dirname ${OCI_private_key_path}) && echo "${{ secrets.TF_VAR_PRIVATE_KEY }}" > ${OCI_private_key_path} && chmod 600 ${OCI_private_key_path}

      - name: Terraform Init
        working-directory: Terraform
        run: terraform init -input=false -backend-config="bucket=${{ vars.TF_BUCKET_NAME }}" -backend-config="namespace=${{ secrets.TF_NAMESPACE }}"

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4

      - name: Run TFLint
        run: tflint --init && tflint -f compact
        working-directory: Terraform
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Setup Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci
          use-cache: "true"
          version: latest

      - name: Terraform Plan
        run: terraform plan -input=false -out=tfplan
        working-directory: Terraform
        id: plan

      - name: Terraform Apply
        run: terraform apply -input=false tfplan
        working-directory: Terraform
  ansible_setup:
    needs: terraform
    secrets: inherit
    uses: ./.github/workflows/ansible-setup.yaml

  # ansible_k3s:
  #   needs: ansible_setup
  #   secrets: inherit
  #   uses: ./.github/workflows/ansible-k3s.yaml
