name: Deploy Terraform Infrastructure
on:
  workflow_dispatch:
  schedule:
    # Run weekly on Sunday at 2 AM UTC to prevent artifact expiration
    - cron: "0 2 * * 0"
  push:
    branches:
      - main
    paths:
      - "Terraform/**"
      - ".github/workflows/terraform.yaml"

concurrency:
  group: terraform
  cancel-in-progress: true

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: server
    env:
      PM_PASS: ${{ secrets.PM_PASS }}
      TF_VAR_fingerprint: ${{ secrets.TF_VAR_FINGERPRINT }}
      TF_VAR_private_key_path: ${{ github.workspace }}/${{ vars.RELATIVE_PRIVATE_KEY_PATH }}
      TF_VAR_region: ${{ secrets.TF_VAR_REGION }}
      TF_VAR_tenancy_ocid: ${{ secrets.TF_VAR_TENANCY_OCID }}
      TF_VAR_user_ocid: ${{ secrets.TF_VAR_USER_OCID }}
      TF_VAR_proxmox_host: ${{ vars.TF_VAR_proxmox_host }}
      TF_VAR_bucket_name: ${{ secrets.TF_BUCKET_NAME }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4

      - name: Run TFLint
        run: tflint --init && tflint -f compact
        working-directory: Terraform
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Setup Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci
          version: latest

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Save Oracle Key to a file
        run: |
          echo "${{ secrets.TF_VAR_PRIVATE_KEY }}" > "${{ env.TF_VAR_private_key_path }}"
          chmod 600 "${{ env.TF_VAR_private_key_path }}"

      - name: Terraform Init
        working-directory: Terraform
        run: terraform init -backend-config="bucket=${{ secrets.TF_BUCKET_NAME }}" -backend-config="namespace=${{ secrets.TF_NAMESPACE }}"

      - name: Terraform Plan
        run: terraform plan -out=tfplan -input=false
        working-directory: Terraform

      - name: Terraform Apply
        run: terraform apply -input=false tfplan
        working-directory: Terraform
        if: github.event_name == 'workflow_dispatch' || github.event_name == 'push'

      - name: Encrypt sensitive files for Ansible
        run: |
          # Encrypt inventory.ini if it exists
          if [ -f "Ansible/inventory.ini" ]; then
            gpg --symmetric --cipher-algo AES256 --batch --yes --passphrase "${{ secrets.GPG_SECRET }}" --output Ansible/inventory.ini.gpg Ansible/inventory.ini
          fi
          # Encrypt deployment key if it exists
          if [ -f "Keys/deployment_key.pem" ]; then
            gpg --symmetric --cipher-algo AES256 --batch --yes --passphrase "${{ secrets.GPG_SECRET }}" --output Keys/deployment_key.pem.gpg Keys/deployment_key.pem
          fi

      - name: Upload encrypted artifacts
        uses: actions/upload-artifact@v4
        with:
          name: encrypted-ansible-files
          path: |
            Ansible/inventory.ini.gpg
            Keys/deployment_key.pem.gpg
          retention-days: 90
