name: Deploy Terraform Infrastructure

on:
  workflow_dispatch:
  push:
    paths:
      - "Terraform/**"
      - ".github/workflows/terraform.yaml"
    branches:
      - main

concurrency:
  group: terraform-${{ github.ref }}
  cancel-in-progress: true

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: server
    env:
      PM_PASS: ${{ secrets.PM_PASS }}
      TF_VAR_fingerprint: ${{ secrets.TF_VAR_FINGERPRINT }}
      TF_VAR_private_key_path: ${{ github.workspace }}/${{ vars.RELATIVE_PRIVATE_KEY_PATH }}
      TF_VAR_region: ${{ secrets.TF_VAR_REGION }}
      TF_VAR_tenancy_ocid: ${{ secrets.TF_VAR_TENANCY_OCID }}
      TF_VAR_user_ocid: ${{ secrets.TF_VAR_USER_OCID }}
      TF_VAR_proxmox_host: ${{ secrets.TF_VAR_PROXMOX_HOST }}
      TF_VAR_state_bucket_name: ${{ vars.TF_BUCKET_NAME }}
      TF_VAR_ansible_bucket_name: ${{ vars.ANSIBLE_BUCKET_NAME }}
      OCI_BUCKET: ${{ vars.TF_BUCKET_NAME }}
      OCI_NAMESPACE: ${{ secrets.TF_NAMESPACE }}
      OCI_CLI_USER: ${{ secrets.TF_VAR_USER_OCID }}
      OCI_CLI_TENANCY: ${{ secrets.TF_VAR_TENANCY_OCID }}
      OCI_CLI_FINGERPRINT: ${{ secrets.TF_VAR_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.TF_VAR_PRIVATE_KEY }}
      OCI_CLI_REGION: ${{ secrets.TF_VAR_REGION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          activate-environment: true
          enable-cache: true

      - name: Install Project Dependencies
        run: uv sync --locked --link-mode=copy

      - name: Download files from OCI bucket
        continue-on-error: true
        run: oci os object bulk-download -bn "${{ vars.ANSIBLE_BUCKET_NAME }}" -ns "${{ secrets.TF_NAMESPACE }}" --dest-dir .private/

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: Terraform
        run: terraform init

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4

      - name: Run TFLint
        run: tflint --init && tflint -f compact
        working-directory: Terraform
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Setup Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci
          version: latest

      - name: Terraform Plan
        run: terraform plan -out=tfplan -input=false -detailed-exitcode && echo exit_code."$?" >> $GITHUB_OUTPUT
        continue-on-error: true
        working-directory: Terraform
        id: plan

      - name: Exit if plan failed
        if: steps.plan.outputs.exit_code != '0' && steps.plan.outputs.exit_code != '2'
        run: |
          echo "::error Terraform plan failed with exit code ${{ steps.plan.outputs.exit_code }}"
          exit 1

      - name: Terraform Apply
        run: terraform apply -input=false tfplan
        working-directory: Terraform
        if: (github.event_name == 'workflow_dispatch' || github.event_name == 'push' ) && steps.plan.outputs.exit_code == '2'

      - name: Check for changes in shared files and upload to OCI bucket
        uses: oracle-actions/run-oci-cli-command@v1.3.2
        with:
          command: os object bulk-upload -bn "${{ vars.ANSIBLE_BUCKET_NAME }}" -ns "${{ secrets.TF_NAMESPACE }}" --src-dir .private/ --overwrite
