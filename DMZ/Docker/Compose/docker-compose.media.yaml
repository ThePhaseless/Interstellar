name: media
services:
  recyclarr:
    image: recyclarr/recyclarr
    container_name: Recyclarr
    volumes:
      - ${CONFIG_PATH}/Media/Recyclarr:/config
    environment:
      - TZ=${TIMEZONE}

  bazarr:
    image: linuxserver/bazarr:latest
    container_name: Bazarr
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_PATH}/Media/Bazarr:/config
      - ${MEDIA_PATH}:/data
    ports:
      - 6767:6767
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bazarr.middlewares=authelia"

  radarr:
    image: linuxserver/radarr:latest
    container_name: Radarr
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_PATH}/Media/Radarr:/config
      - ${MEDIA_PATH}:/data
    ports:
      - 7878:7878
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.middlewares=authelia"

  sonarr:
    image: linuxserver/sonarr:latest
    container_name: Sonarr
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_PATH}/Media/Sonarr:/config
      - ${MEDIA_PATH}:/data #optional
    ports:
      - 8989:8989
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.middlewares=authelia"

  prowlarr:
    image: linuxserver/prowlarr:develop
    container_name: Prowlarr
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_PATH}/Media/Prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prowlarr.middlewares=authelia"

  qbittorrent:
    container_name: qBittorrent
    restart: unless-stopped
    image: ghcr.io/hotio/qbittorrent:latest
    ports:
      - 5656:8080
    environment:
      - UMASK=002
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_PATH}/Media/qBittorrent:/config
      - ${MEDIA_PATH}/Downloads:/data/Downloads
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.qbittorrent.middlewares=authelia"

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: Jellyseerr
    environment:
      - TZ=${TIMEZONE}
    ports:
      - 5055:5055
    volumes:
      - ${CONFIG_PATH}/Media/Jellyseerr:/app/config
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyseerr.rule=HostRegexp(`{subdomain:add}.{host:.+}`)"
      - "traefik.http.routers.jellyseerr.middlewares=authelia"

  jellyfin:
    image: linuxserver/jellyfin:latest
    container_name: Jellyfin
    environment:
      - TZ=${TIMEZONE}
      - JELLYFIN_PublishedServerUrl=watch.${PUBLIC_HOSTNAME}
    volumes:
      - ${CONFIG_PATH}/Media/Jellyfin:/config
      - ${MEDIA_PATH}:/data
    ports:
      - 8096:8096
      - 7359:7359/udp
      - 1900:1900/udp
    restart: unless-stopped
    devices:
      - /dev/dri:/dev/dri
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyfin.rule=HostRegexp(`{subdomain:watch}.{host:.+}`)"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"

  watchtower:
    image: containrrr/watchtower:latest
    container_name: Watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --cleanup
    restart: unless-stopped
    labels:
      - "traefik.enable=false"

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: FlareSolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=${TIMEZONE}
    restart: unless-stopped
