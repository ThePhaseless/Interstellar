---
- name: Get Tailscale status
  ansible.builtin.command: tailscale status --json
  register: tailscale_status_result
  changed_when: false

- name: Parse Tailscale status JSON
  ansible.builtin.set_fact:
    tailscale_status: "{{ tailscale_status_result.stdout | from_json }}"

- name: Filter hosts with tags and create host groups
  ansible.builtin.set_fact:
    tailscale_tagged_hosts: >-
      {{
        tailscale_status.Peer | dict2items |
        selectattr('value.Tags', 'defined') |
        selectattr('value.Tags', '!=', []) |
        list
      }}

- name: Add tagged hosts to inventory groups
  ansible.builtin.add_host:
    name: "{{ item.value.DNSName.split('.')[0] }}"
    groups: "{{ item.value.Tags | map('regex_replace', '^tag:', '') | list }}"
    ansible_host: "{{ item.value.DNSName }}"
  loop: "{{ tailscale_tagged_hosts }}"
  changed_when: false

- name: Display discovered Tailscale hosts
  ansible.builtin.debug:
    msg: |
      Discovered {{ tailscale_tagged_hosts | length }} tagged Tailscale hosts:
      {% for host in tailscale_tagged_hosts %}
      - {{ host.value.DNSName.split('.')[0] }} ({{ host.value.TailscaleIPs[0] }})
        Tags: {{ host.value.Tags | map('regex_replace', '^tag:', '') | join(', ') }}
        Online: {{ host.value.Online }}
      {% endfor %}
  when: tailscale_tagged_hosts | length > 0

- name: Display skipped hosts without tags
  ansible.builtin.debug:
    msg: |
      Skipped {{
      (tailscale_status.Peer | dict2items | rejectattr('value.Tags', 'defined') | list) +
      (tailscale_status.Peer | dict2items | selectattr('value.Tags', 'defined') | selectattr('value.Tags', '==', []) | list) | length
      }} hosts without tags
